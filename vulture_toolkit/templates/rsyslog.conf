module(load="imfile")
module(load="builtin:omfile")
module(load="ommongodb")
module(load="omelasticsearch")
module(load="mmjsonparse")
module(load="mmnormalize")

$WorkDirectory /var/spool/output
$ActionFileDefaultTemplate RSYSLOG_TraditionalFileFormat


###### Vulture access log Template for MongoDB ######
template(name="tpl_mongo" type="list") {
  property(name="$!app_name")
  property(name="$!src_ip")
  property(name="$!user")
  property(name="$!time")
  property(name="$!http_method")
  property(name="$!requested_uri")
  property(name="$!incoming_protocol")
  property(name="$!http_code")
  property(name="$!size")
  property(name="$!referer")
  property(name="$!user_agent")
  property(name="$!bytes_received")
  property(name="$!bytes_sent")
  property(name="$!time_elapsed")
  property(name="$!country")
  property(name="$!city")
  property(name="$!lat")
  property(name="$!lon")
  property(name="$!reputation")
  property(name="$!owasp_top10")
  property(name="$!reasons")
  property(name="$!score")
  property(name="$!threshold")
}

###### Vulture access log Template for Elastic ######
template(name="tpl_elastic" type="list" option.json="on") {
  constant(value="{")
      constant(value="\"timestamp\":\"")            property(name="$!time" dateFormat="rfc3339")
      constant(value="\",\"app_name\":\"")          property(name="$!app_name")
      constant(value="\",\"src_ip\":\"")            property(name="$!src_ip")
      constant(value="\",\"user\":\"")              property(name="$!user")
      constant(value="\",\"http_method\":\"")       property(name="$!http_method")
      constant(value="\",\"requested_uri\":\"")     property(name="$!requested_uri")
      constant(value="\",\"incoming_protocol\":\"") property(name="$!incoming_protocol")
      constant(value="\",\"http_code\":")           property(name="$!http_code")
      constant(value=",\"size\":")                  property(name="$!size")
      constant(value=",\"referer\":\"")             property(name="$!referer")
      constant(value="\",\"user_agent\":\"")        property(name="$!user_agent")
      constant(value="\",\"bytes_received\":")      property(name="$!bytes_received")
      constant(value=",\"bytes_sent\":")            property(name="$!bytes_sent")
      constant(value=",\"time_elapsed\":")          property(name="$!time_elapsed")
      constant(value=",\"country\":\"")             property(name="$!country")
      constant(value="\",\"city\":\"")                property(name="$!city")
      constant(value="\",\"lat\":\"")                 property(name="$!lat")
      constant(value="\",\"lon\":\"")                 property(name="$!lon")
      constant(value="\",\"reputation\":\"")        property(name="$!reputation")
      constant(value="\",\"owasp_top10\":\"")       property(name="$!owasp_top10")
      constant(value="\",\"reasons\":\"")           property(name="$!reasons")
      constant(value="\",\"score\":")             property(name="$!score")
      constant(value=",\"threshold\":")         property(name="$!threshold")
  constant(value="}")
}

###### Vulture learning match log Template for MongoDB ######
template(name="tpl_learning_mongo" type="list") {
  property(name="$!time" dateFormat="rfc3339")
  property(name="$!ip")
  property(name="$!hostname")
  property(name="$!uri")
  property(name="$!block")
  property(name="$!scores!sql" outname="score_sql")
  property(name="$!scores!rfi" outname="score_rfi")
  property(name="$!scores!traversal" outname="score_traversal")
  property(name="$!scores!evade" outname="score_evade")
  property(name="$!scores!xss" outname="score_xss")
  property(name="$!scores!upload" outname="score_upload")

  property(name="$!match[0]!zone" outname="zone0")
  property(name="$!match[0]!id[0]" outname="id0_0")
  property(name="$!match[0]!id[1]" outname="id0_1")
  property(name="$!match[0]!id[2]" outname="id0_2")
  property(name="$!match[0]!id[3]" outname="id0_3")
  property(name="$!match[0]!id[4]" outname="id0_4")
  property(name="$!match[0]!id[5]" outname="id0_5")
  property(name="$!match[0]!id[6]" outname="id0_6")
  property(name="$!match[0]!id[7]" outname="id0_7")
  property(name="$!match[0]!id[8]" outname="id0_8")
  property(name="$!match[0]!id[9]" outname="id0_9")
  property(name="$!match[0]!var_name" outname="var_name0")
  property(name="$!match[0]!content" outname="content0")

  property(name="$!match[1]!zone" outname="zone1")
  property(name="$!match[1]!id[0]" outname="id1_0")
  property(name="$!match[1]!id[1]" outname="id1_1")
  property(name="$!match[1]!id[2]" outname="id1_2")
  property(name="$!match[1]!id[3]" outname="id1_3")
  property(name="$!match[1]!id[4]" outname="id1_4")
  property(name="$!match[1]!id[5]" outname="id1_5")
  property(name="$!match[1]!id[6]" outname="id1_6")
  property(name="$!match[1]!id[7]" outname="id1_7")
  property(name="$!match[1]!id[8]" outname="id1_8")
  property(name="$!match[1]!id[9]" outname="id1_9")
  property(name="$!match[1]!var_name" outname="var_name1")
  property(name="$!match[1]!content" outname="content1")

  property(name="$!match[2]!zone" outname="zone2")
  property(name="$!match[2]!id[0]" outname="id2_0")
  property(name="$!match[2]!id[1]" outname="id2_1")
  property(name="$!match[2]!id[2]" outname="id2_2")
  property(name="$!match[2]!id[3]" outname="id2_3")
  property(name="$!match[2]!id[4]" outname="id2_4")
  property(name="$!match[2]!id[5]" outname="id2_5")
  property(name="$!match[2]!id[6]" outname="id2_6")
  property(name="$!match[2]!id[7]" outname="id2_7")
  property(name="$!match[2]!id[8]" outname="id2_8")
  property(name="$!match[2]!id[9]" outname="id2_9")
  property(name="$!match[2]!var_name" outname="var_name2")
  property(name="$!match[2]!content" outname="content2")

  property(name="$!match[3]!zone" outname="zone3")
  property(name="$!match[3]!id[0]" outname="id3_0")
  property(name="$!match[3]!id[1]" outname="id3_1")
  property(name="$!match[3]!id[2]" outname="id3_2")
  property(name="$!match[3]!id[3]" outname="id3_3")
  property(name="$!match[3]!id[4]" outname="id3_4")
  property(name="$!match[3]!id[5]" outname="id3_5")
  property(name="$!match[3]!id[6]" outname="id3_6")
  property(name="$!match[3]!id[7]" outname="id3_7")
  property(name="$!match[3]!id[8]" outname="id3_8")
  property(name="$!match[3]!id[9]" outname="id3_9")
  property(name="$!match[3]!var_name" outname="var_name3")
  property(name="$!match[3]!content" outname="content3")

  property(name="$!match[4]!zone" outname="zone4")
  property(name="$!match[4]!id[0]" outname="id4_0")
  property(name="$!match[4]!id[1]" outname="id4_1")
  property(name="$!match[4]!id[2]" outname="id4_2")
  property(name="$!match[4]!id[3]" outname="id4_3")
  property(name="$!match[4]!id[4]" outname="id4_4")
  property(name="$!match[4]!id[5]" outname="id4_5")
  property(name="$!match[4]!id[6]" outname="id4_6")
  property(name="$!match[4]!id[7]" outname="id4_7")
  property(name="$!match[4]!id[8]" outname="id4_8")
  property(name="$!match[4]!id[9]" outname="id4_9")
  property(name="$!match[4]!var_name" outname="var_name4")
  property(name="$!match[4]!content" outname="content4")

  property(name="$!match[5]!zone" outname="zone5")
  property(name="$!match[5]!id[0]" outname="id5_0")
  property(name="$!match[5]!id[1]" outname="id5_1")
  property(name="$!match[5]!id[2]" outname="id5_2")
  property(name="$!match[5]!id[3]" outname="id5_3")
  property(name="$!match[5]!id[4]" outname="id5_4")
  property(name="$!match[5]!id[5]" outname="id5_5")
  property(name="$!match[5]!id[6]" outname="id5_6")
  property(name="$!match[5]!id[7]" outname="id5_7")
  property(name="$!match[5]!id[8]" outname="id5_8")
  property(name="$!match[5]!id[9]" outname="id5_9")
  property(name="$!match[5]!var_name" outname="var_name5")
  property(name="$!match[5]!content" outname="content5")

  property(name="$!match[6]!zone" outname="zone6")
  property(name="$!match[6]!id[0]" outname="id6_0")
  property(name="$!match[6]!id[1]" outname="id6_1")
  property(name="$!match[6]!id[2]" outname="id6_2")
  property(name="$!match[6]!id[3]" outname="id6_3")
  property(name="$!match[6]!id[4]" outname="id6_4")
  property(name="$!match[6]!id[5]" outname="id6_5")
  property(name="$!match[6]!id[6]" outname="id6_6")
  property(name="$!match[6]!id[7]" outname="id6_7")
  property(name="$!match[6]!id[8]" outname="id6_8")
  property(name="$!match[6]!id[9]" outname="id6_9")
  property(name="$!match[6]!var_name" outname="var_name6")
  property(name="$!match[6]!content" outname="content6")

  property(name="$!match[7]!zone" outname="zone7")
  property(name="$!match[7]!id[0]" outname="id7_0")
  property(name="$!match[7]!id[1]" outname="id7_1")
  property(name="$!match[7]!id[2]" outname="id7_2")
  property(name="$!match[7]!id[3]" outname="id7_3")
  property(name="$!match[7]!id[4]" outname="id7_4")
  property(name="$!match[7]!id[5]" outname="id7_5")
  property(name="$!match[7]!id[6]" outname="id7_6")
  property(name="$!match[7]!id[7]" outname="id7_7")
  property(name="$!match[7]!id[8]" outname="id7_8")
  property(name="$!match[7]!id[9]" outname="id7_9")
  property(name="$!match[7]!var_name" outname="var_name7")
  property(name="$!match[7]!content" outname="content7")

  property(name="$!match[8]!zone" outname="zone8")
  property(name="$!match[8]!id[0]" outname="id8_0")
  property(name="$!match[8]!id[1]" outname="id8_1")
  property(name="$!match[8]!id[2]" outname="id8_2")
  property(name="$!match[8]!id[3]" outname="id8_3")
  property(name="$!match[8]!id[4]" outname="id8_4")
  property(name="$!match[8]!id[5]" outname="id8_5")
  property(name="$!match[8]!id[6]" outname="id8_6")
  property(name="$!match[8]!id[7]" outname="id8_7")
  property(name="$!match[8]!id[8]" outname="id8_8")
  property(name="$!match[8]!id[9]" outname="id8_9")
  property(name="$!match[8]!var_name" outname="var_name8")
  property(name="$!match[8]!content" outname="content8")

  property(name="$!match[9]!zone" outname="zone9")
  property(name="$!match[9]!id[0]" outname="id9_0")
  property(name="$!match[9]!id[1]" outname="id9_1")
  property(name="$!match[9]!id[2]" outname="id9_2")
  property(name="$!match[9]!id[3]" outname="id9_3")
  property(name="$!match[9]!id[4]" outname="id9_4")
  property(name="$!match[9]!id[5]" outname="id9_5")
  property(name="$!match[9]!id[6]" outname="id9_6")
  property(name="$!match[9]!id[7]" outname="id9_7")
  property(name="$!match[9]!id[8]" outname="id9_8")
  property(name="$!match[9]!id[9]" outname="id9_9")
  property(name="$!match[9]!var_name" outname="var_name9")
  property(name="$!match[9]!content" outname="content9")

  property(name="$!client")
  property(name="$!server")
  property(name="$!method")
  property(name="$!protocol")
  property(name="$!unparsed_uri")
  property(name="$!context_id")
  constant(value="false" outname="whitelisted")
}

###### PacketFilter Template for MongoDB ######
template(name="tpl_pf_mongo" type="list") {
  property(name="$!time" dateFormat="rfc3339")
  property(name="$!hostname")
  property(name="$!action")
  property(name="$!direction")
  property(name="$!interface")
  property(name="$!src_ip")
  property(name="$!src_port")
  property(name="$!dst_ip")
  property(name="$!dst_port")
  property(name="$!info")
}


###### PacketFilter Template for Elastic ######
template(name="tpl_pf_elastic" type="list" option.json="on") {
  constant(value="{")
      constant(value="\"timestamp\":\"")        property(name="timereported" dateFormat="rfc3339")
      constant(value="\",\"hostname\":\"")      property(name="$!hostname")
      constant(value="\",\"action\":\"")        property(name="$!action")
      constant(value="\",\"direction\":\"")     property(name="$!direction")
      constant(value="\",\"interface\":\"")     property(name="$!interface")
      constant(value="\",\"src_ip\":\"")        property(name="$!src_ip")
      constant(value="\",\"src_port\":")        property(name="$!src_port")
      constant(value=",\"dst_ip\":\"")          property(name="$!dst_ip")
      constant(value="\",\"dst_port\":")        property(name="$!dst_port")
      constant(value=",\"info\":\"")            property(name="$!info")
  constant(value="\"}")
}

include(
   file="/usr/local/etc/rsyslog.d/custom_config"
   mode="optional"
)

{% for app in conf.learning_apps %}
  # Declare learning JSON match log file
  input(type="imfile" File="/var/log/Vulture/worker/defender_json_match_{{ app.id }}.log" Tag="{{app.id}}_learning")
  ### Send learning match logs to MongoDB ###
  if $syslogtag contains '{{app.id}}_learning' then {
      action(type="mmjsonparse" cookie="")
      if $parsesuccess == "OK" then {
          action(type="ommongodb" template="tpl_learning_mongo" uristr="{{ app.learning_uristr}}" {% if app.learning_ssl_cert %}ssl_cert="{{ app.learning_ssl_cert}}" {% endif %}{% if app.learning_ssl_ca %}ssl_ca="{{ app.learning_ssl_ca}}" {% endif %}db="logs" collection="learning_{{ app.id }}" allowed_error_codes=["11000"])
      }
      stop
  }
{% endfor %}

{% for app in conf.app_list %}

#Declare Apache source logfiles
input(type="imfile" File="{{app.access_logpath}}" Tag="{{app.id}}")
{% if app.syslog_repo %}
### Send logs to remote SYSLOG ###
if $syslogtag contains '{{app.id}}' then {
    action(type="omfwd" Target="{{app.syslog_repo.syslog_host}}" Port="{{app.syslog_repo.syslog_port}}" Protocol="{{app.syslog_repo.syslog_protocol}}")
}
{% endif %}

{% if app.log_custom.repository.is_internal %}
### Send logs to  MongoDB ###
if $syslogtag contains '{{app.id}}' then {
    action(type="mmjsonparse")
    if $parsesuccess == "OK" then {
        if $!score == "-" then {
            set $!score = 0;
        } else {
            set $!score = cnum($!score);
        }
        if $!threshold == "-" then {
            set $!threshold = 0;
        } else {
            set $!threshold = cnum($!threshold);
        }
        action(type="ommongodb" template="tpl_mongo" uristr="{{ app.uristr}}" {% if app.ssl_cert %}ssl_cert="{{ app.ssl_cert}}" {% endif %}{% if app.ssl_ca %}ssl_ca="{{ app.ssl_ca}}" {% endif %}db="logs" collection="access" allowed_error_codes=["11000"])
    }
    stop

}
{% elif app.log_custom.repository.type_uri == 'mongodb' %}
if $syslogtag contains '{{app.id}}' then {
    action(type="mmjsonparse")
    if $parsesuccess == "OK" then {
        if $!score == "-" then {
            set $!score = 0;
        } else {
            set $!score = cnum($!score);
        }
        if $!threshold == "-" then {
            set $!threshold = 0;
        } else {
            set $!threshold = cnum($!threshold);
        }
        action(type="ommongodb" template="tpl_mongo" uristr="{{ app.uristr }}" {% if app.ssl_cert %}ssl_cert="{{ app.ssl_cert}}" {% endif %}{% if app.ssl_ca %}ssl_ca="{{ app.ssl_ca}}" {% endif %}db="{{app.log_custom.repository.db_name}}" collection="{{app.log_custom.repository.db_access_collection_name}}" allowed_error_codes=["11000"])
    }
    stop

}
{% elif app.log_custom.repository.type_uri == 'elasticsearch' %}
if $syslogtag contains '{{app.id}}' then {
  action(type="mmjsonparse")
  $template srchidx_{{app.id}},"{{app.log_custom.repository.es_access_index_name}}-{{app.es_dateformat}}"

  {% set srv_list = app.log_custom.repository.es_host.split(',') %}

  ### Send logs to Elastic ###
  if $parsesuccess == "OK" then {
      if $!score == "-" then {
          set $!score = 0;
      } else {
          set $!score = cnum($!score);
      }
      if $!threshold == "-" then {
          set $!threshold = 0;
      } else {
          set $!threshold = cnum($!threshold);
      }

      action(type="omelasticsearch"
           server=[{% for srv in srv_list %}"{{ srv }}"{% if not loop.last %},{% endif %}{% endfor %}]
           template="tpl_elastic"
           searchIndex="srchidx_{{app.id}}"
           dynSearchIndex="on"
           searchType="{{app.log_custom.repository.es_access_type_name}}"
           {% if  app.log_custom.repository.es_user %}
           uid="{{ app.log_custom.repository.es_user }}"
           pwd="{{ app.log_custom.repository.es_password }}"
           {% endif %}
           bulkmode="on"
           maxbytes="100m"
           queue.type="linkedlist"
           queue.size="5000"
           queue.dequeuebatchsize="300"
           action.resumeretrycount="-1")
  }
  stop
}
{% endif %}


{% endfor %}

{% if conf.pf_syslog or conf.pf_settings %}
###### PACKET FILTER ######
#Always log pf
input(type="imfile" File="/var/log/pflog.log" Tag="packetfilter")
if $syslogtag contains 'packetfilter' then {

    {% if conf.pf_syslog %}### Send pf logs to remote SYSLOG
    action(type="omfwd" Target="{{conf.pf_syslog.syslog_host}}" Port="{{conf.pf_syslog.syslog_port}}" Protocol="{{conf.pf_syslog.syslog_protocol}}")
    {% endif %}
    {% if conf.pf_settings %}
    action(type="mmnormalize" rulebase="/home/vlt-gui/vulture/vulture_toolkit/templates/pf.tpl" userawmsg="off")

    if $parsesuccess == "OK" then {
        {% if conf.pf_settings.is_internal  %}
        ### Send PF logs to  MongoDB ###
        action(type="ommongodb" template="tpl_pf_mongo" uristr="{{ conf.pf_settings.uristr}}" {% if conf.pf_settings.ssl_cert %}ssl_cert="{{ conf.pf_settings.ssl_cert }}" {% endif %}{% if conf.pf_settings.ssl_ca %}ssl_ca="{{ conf.pf_settings.ssl_ca }}" {% endif %}db="logs" collection="vulture_pf" allowed_error_codes=["11000"])
        stop
        {% elif conf.pf_settings.type_uri == 'mongodb' %}
        action(type="ommongodb" template="tpl_pf_mongo" uristr="{{ conf.pf_settings.uristr}}" {% if conf.pf_settings.ssl_cert %}ssl_cert="{{ conf.pf_settings.ssl_cert }}" {% endif %}{% if conf.pf_settings.ssl_ca %}ssl_ca="{{ conf.pf_settings.ssl_ca}}" {% endif %}db="{{conf.pf_settings.db_name}}" collection="{{conf.pf_settings.db_packetfilter_collection_name}}" allowed_error_codes=["11000"])
        stop
        {% elif conf.pf_settings.type_uri == 'elasticsearch' %}
          ### Send pf logs to external Elastic
          $template pfidx_{{conf.pf_settings.id}},"{{conf.pf_settings.es_packetfilter_index_name}}-{{conf.pf_settings.es_dateformat}}"
          ### Send logs to Elastic ###
          {% set srv_list = conf.pf_settings.es_host.split(',') %}
          action(type="omelasticsearch"
               server=[{% for srv in srv_list %}"{{ srv }}"{% if not loop.last %},{% endif %}{% endfor %}]
               template="tpl_pf_elastic"
               searchIndex="pfidx_{{conf.pf_settings.id}}"
               dynSearchIndex="on"
               searchType="{{conf.pf_settings.es_packetfilter_type_name}}"
               {% if conf.pf_settings.es_user %}
               uid="{{ conf.pf_settings.es_user }}"
               pwd="{{ conf.pf_settings.es_password }}"
               {% endif %}
               bulkmode="on"
               maxbytes="100m"
               queue.type="linkedlist"
               queue.size="5000"
               queue.dequeuebatchsize="300"
               action.resumeretrycount="-1")
          stop
        {% endif %}
    }

    {% endif %}
}
{% endif %}


