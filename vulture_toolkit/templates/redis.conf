#This file is part of Vulture 3.
#
#Vulture 3 is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.

#Vulture 3 is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with Vulture 3.  If not, see http://www.gnu.org/licenses/.

########################## WARNING ###############################
# Don't edit this file, it is automatically generated by Vulture #
########################## WARNING ###############################
###################
# General options #
###################

# Run in background
daemonize yes
unixsocket /var/db/redis/redis.sock
unixsocketperm 766

# PID file and port used
pidfile /var/run/redis/redis.pid
port 6379

# Close the connection after a client is idle for N seconds
timeout 5
tcp-backlog 1024
tcp-keepalive 60

# Logging
loglevel notice
logfile /var/log/redis/redis.log

databases 1

# Save data on disk (So that reputation is ready after reboot)
#save 900 1
#save 300 10
#save 60 10000

# Maximum speed
stop-writes-on-bgsave-error no

# The filename where to dump the DB
dir /var/db/redis/
dbfilename dump.rdb
rdbcompression no
rdbchecksum no

# Define Redis as a LRU cache
# If the max memory is reached, old keys are removed to accept new keys
maxmemory 1024mb

# Disable the protected mode to permit connection from the non-loopback interfaces
protected-mode no

#################
# Slave Options #
#################

{% if not conf.is_redis_master %}
# Become a slave to the primary Vulture node which runs master Redis server
slaveof {{conf.master_ip}} 6379{% else %}
# This node is the master by default but  need slave config in case of role changing{% endif %}

# The slave continue to respond even if the master is down
slave-serve-stale-data yes

# Slave can write to itself
slave-read-only no
